1:
(max({((7 + 25) * (25 * 25)), max({(max({(7 * (25 * 100)), max({(((7 + 25) * (2 * 8)) + 25), (max({((7 + 25) * (25 * 100)), max({(((7 + 25) * (25 * 100)) + 25), (2 - 4)})}) - 4)})}) + 25), (2 * (100 - 7))})}) + ((max({2, 2}) * (max({2, 2}) - 100)) * (25 + (25 + 25))))
depth: 12
generation: 34
number: 65346

2:
Best individual of last generation: (max({((7 + 25) * (25 * 100)), ((((7 + 25) * (25 * 100)) + ((25 - 2) - 2)) + 25)}) + ((max({2, (((7 + 25) * (2 - 100)) * (25 + (max({((7 + 25) * (25 * 100)), ((((7 + 25) * (25 * 100)) + 25) + 25)}) + (2 * (25 + (25 + 25))))))}) * (2 - 100)) * (25 + (25 + 25))))
depth: 12
generation: 113
number: 65346

3:
max({max({((25 * 25) * (4 + 100)), (max({(7 + 4), max({2, 25})}) + max({8, max({25, 8})}))}), max({((100 * (25 + 2)) - max({8, 2})), ((max({((100 * (25 + 2)) - max({8, 2})), ((max({max({((100 * (25 + 2)) - max({8, 2})), ((max({((100 * (25 + 2)) - max({8, 2})), ((max({((25 * 25) * (4 + 100)), 7}) + max({((max({8, 2}) * (25 + 2)) - (2 * 4)), ((25 + 2) - 25)})) - 25)}) + 25) - 25)}), 7}) + max({((max({8, 2}) * (25 + 2)) - (7 * 4)), ((25 + 2) - 25)})) - 25)}) + 25) - 25)})})
depth: 18
generation: 10
number: 65346

4:
(max({7, ((8 - ((100 * (max({7, 4}) - 4)) - 100)) - (100 - max({(7 * ((25 * 100) * max({2, 8}))), (((8 + 100) + (4 - 4)) * 25)})))}) - (max({max({2, (((7 * (4 - 8)) - (max({7, 8}) - (100 * 8))) + (((8 + 4) + (25 + (25 + 25))) - (max({4, 100}) - 7)))}), 8}) + (max({4, ((2 - ((8 * 7) * 8)) * max({max({(7 + 4), (8 - 100)}), ((2 * 100) - 4)}))}) + (max({(((7 - 2) + max({4, 100})) + (4 + (100 - 25))), ((7 + (8 * 2)) - ((2 - 4) * max({25, 8})))}) * max({(4 - 25), max({((2 * 8) * 25), ((8 - 7) - 100)})})))))
depth: 9
generation: 10
number: 65346

5:
(max({100, max({(7 - 100), (max({((7 + 25) * (25 * 100)), (7 + 100)}) - 4)})}) + (((7 + 100) - (100 * 4)) * (25 + 25)))
depth: 7
generation: 46
number: 65346